const workflowDefs = [
  {
    name: 'FLEET_FIND_DRIVER_FLOW',
    description: 'Create Trip Tasks Todos for order from oms',
    ownerEmail: '4pl-tms-owner@true-e-logistics.com',
    version: 1,
    tasks: [
      {
        name: 'FLEET_FIND_DRIVER',
        taskReferenceName: 'FLEET_FIND_DRIVER',
        type: 'SIMPLE',
        inputParameters: {
          orderId: '${workflow.input.orderId}',
          tripId: '${workflow.input.tripId}',
          passengerId: '${workflow.input.passengerId}',
          vehicleType: '${workflow.input.vehicleType}',
          driverCriteria: '${workflow.input.driverCriteria}',
          broadcastConfig: '${workflow.input.broadcastConfig}',
          statuses: '${workflow.input.statuses}',
          'uber-trace-id': '${workflow.input.uber-trace-id}',
        },
        optional: false,
      },
      {
        name: 'FLEET_GET_USER_CREATE_TASK_TRIP_WORKSCHEDULE',
        taskReferenceName: 'FLEET_GET_USER_CREATE_TASK_TRIP_WORKSCHEDULE',
        type: 'SIMPLE',
        inputParameters: {
          orderId: '${workflow.input.orderId}',
          staffId: '${FLEET_FIND_DRIVER.output.staffId}',
          tripId: '${FLEET_FIND_DRIVER.output.tripId}',
          statuses: '${FLEET_FIND_DRIVER.output.statuses}',
          'uber-trace-id': '${FLEET_FIND_DRIVER.output.uber-trace-id}',
          vehicleId: '${FLEET_FIND_DRIVER.output.vehicleId}',
        },
        optional: false,
      },
    ],
    schemaVersion: 2,
    inputParameters: ['trip', 'uber-trace-id'],
  },
  {
    name: 'TRUE_RYDE_FLOW',
    description: 'Create Trip Taxi Extension ',
    ownerEmail: '4pl-tms-owner@true-e-logistics.com',
    version: 1,
    tasks: [
      {
        name: 'TMS_CREATE_TRIP_TASK_TODO',
        taskReferenceName: 'TMS_CREATE_TRIP_TASK_TODO',
        inputParameters: {
          orders: '${workflow.input.order}',
          mainWorkflowInstantId: '${workflow.workflowId}',
          orderId: '${workflow.input.order.orderId}',
          'uber-trace-id': '${workflow.input.uber-trace-id}',
        },
        type: 'SUB_WORKFLOW',
        subWorkflowParam: {
          name: 'TMS_CREATE_TRIP_TASK_TODO',
          version: 1,
        },
      },
      {
        name: 'FLEET_FIND_DRIVER_FLOW',
        taskReferenceName: 'FLEET_FIND_DRIVER_FLOW',
        inputParameters: {
          orderId: '${TMS_CREATE_TRIP_TASK_TODO.output.orderId}',
          passengerId: '${workflow.input.order.owner.userId}',
          tripId: '${TMS_CREATE_TRIP_TASK_TODO.output.tripId}',
          driverCriteria: '${TMS_CREATE_TRIP_TASK_TODO.output.driverCriteria}',
          vehicleType: '${TMS_CREATE_TRIP_TASK_TODO.output.vehicleType}',
          broadcastConfig: '${TMS_CREATE_TRIP_TASK_TODO.output.broadcastConfig}',
          statuses: '${TMS_CREATE_TRIP_TASK_TODO.output.statuses}',
          'uber-trace-id': '${TMS_CREATE_TRIP_TASK_TODO.output.uber-trace-id}',
        },
        type: 'SUB_WORKFLOW',
        subWorkflowParam: {
          name: 'FLEET_FIND_DRIVER_FLOW',
          version: 1,
        },
      },
      {
        name: 'TMS_TRANSPORT',
        taskReferenceName: 'TMS_TRANSPORT',
        inputParameters: {
          orderId: '${TMS_CREATE_TRIP_TASK_TODO.output.orderId}',
          tripId: '${TMS_CREATE_TRIP_TASK_TODO.output.tripId}',
          staffId: '${FLEET_FIND_DRIVER_FLOW.output.staffId}',
          statuses: '${FLEET_FIND_DRIVER_FLOW.output.statuses}',
          'uber-trace-id': '${FLEET_FIND_DRIVER_FLOW.output.uber-trace-id}',
        },
        type: 'SIMPLE',
      },
      {
        name: 'TMS_SUMMARY',
        taskReferenceName: 'TMS_SUMMARY',
        inputParameters: {
          orderId: '${TMS_CREATE_TRIP_TASK_TODO.output.orderId}',
          tripId: '${TMS_TRANSPORT.output.tripId}',
          staffId: '${TMS_TRANSPORT.output.staffId}',
          statuses: '${TMS_TRANSPORT.output.statuses}',
          'uber-trace-id': '${TMS_TRANSPORT.output.uber-trace-id}',
        },
        type: 'SIMPLE',
      },
    ],
    schemaVersion: 2,
    failureWorkflow: 'TMS_FAILURE_FLOW',
    inputParameters: [],
  },
  {
    name: 'TMS_CREATE_TRIP_TASK_TODO',
    description: 'TMS_CREATE_TRIP_TASK_TODO vesion 2',
    ownerEmail: '4pl-tms-owner@true-e-logistics.com',
    version: 1,
    tasks: [
      {
        name: 'TMS_MAPPING_BASE_MODEL_FOR_TAXI',
        taskReferenceName: 'TMS_MAPPING_BASE_MODEL_FOR_TAXI',
        inputParameters: {
          orders: '${workflow.input.orders}',
          mainWorkflowInstantId: '${workflow.input.mainWorkflowInstantId}',
          orderId: '${workflow.input.orderId}',
          statuses: '${workflow.input.statuses}',
          'uber-trace-id': '${workflow.input.uber-trace-id}',
        },
        type: 'SIMPLE',
        optional: false,
      },
      {
        name: 'TMS_CREATE_TASKS',
        taskReferenceName: 'TMS_CREATE_TASKS',
        type: 'SIMPLE',
        inputParameters: {
          mainWorkflowInstantId: '${workflow.input.mainWorkflowInstantId}',
          orders: '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.orders}',
          orderId: '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.orderId}',
          statuses: '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.statuses}',
          'uber-trace-id': '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.uber-trace-id}',
        },
        optional: false,
      },
      {
        name: 'TMS_CREATE_TRIP',
        taskReferenceName: 'TMS_CREATE_TRIP',
        type: 'SIMPLE',
        inputParameters: {
          mainWorkflowInstantId: '${workflow.input.mainWorkflowInstantId}',
          tasks: '${TMS_CREATE_TASKS.output.tasks}',
          orders: '${TMS_CREATE_TASKS.output.orders}',
          orderId: '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.orderId}',
          statuses: '${TMS_CREATE_TASKS.output.statuses}',
          'uber-trace-id': '${TMS_CREATE_TASKS.output.uber-trace-id}',
        },
        optional: false,
      },
    ],
    schemaVersion: 2,
    failureWorkflow: 'TMS_FAILURE_FLOW',
    inputParameters: ['orders', 'orderId', 'statuses', 'mainWorkflowInstantId', 'uber-trace-id'],
  },
  {
    name: 'TMS_FAILURE_FLOW',
    description: 'Workflow for remove trip task todos and cancel flow',
    ownerEmail: '4pl-tms-owner@true-e-logistics.com',
    version: 1,
    schemaVersion: 2,
    tasks: [
      {
        name: 'TMS_DELETE_TRIP_TASK_TODOS',
        taskReferenceName: 'TMS_DELETE_TRIP_TASK_TODOS',
        type: 'SIMPLE',
        inputParameters: {
          orders: '${workflow.input}',
        },
        optional: false,
      },
    ],
    inputParameters: ['orders', 'trip'],
  },
  {
    name: 'TMS_CANCEL_WORKFLOW',
    description: 'Workflow for remove trip task todos and cancel flow',
    ownerEmail: '4pl-tms-owner@true-e-logistics.com',
    version: 1,
    schemaVersion: 2,
    tasks: [
      {
        name: 'TMS_CANCEL_FLOW',
        taskReferenceName: 'TMS_CANCEL_FLOW',
        type: 'SIMPLE',
        inputParameters: {
          orders: '${workflow.input}',
        },
        optional: false,
      },
    ],
    inputParameters: ['orders'],
  },
  {
    name: 'CANCEL_DRIVER_FLOW',
    description: 'Workflow for cancle driver',
    ownerEmail: '4pl-tms-owner@true-e-logistics.com',
    version: 1,
    schemaVersion: 2,
    tasks: [
      {
        name: 'CANCEL_DRIVER',
        taskReferenceName: 'CANCEL_DRIVER',
        type: 'SIMPLE',
        inputParameters: {
          orderId: '${workflow.input.orderId}',
          trip: '${workflow.input.trip}',
          tasks: '${workflow.input.tasks}',
          staffId: '${workflow.input.staffId}',
          passengers: '${workflow.input.passengers}',
          cancelBy: '${workflow.input.cancelBy}',
          workflowInstanceId: '${workflow.input.workflowInstanceId}',
          orderStatus: '${workflow.input.orderStatus}',
        },
        optional: false,
      },
    ],
    inputParameters: [
      'orderId',
      'trip',
      'tasks',
      'staffId',
      'passengers',
      'workflowInstanceId',
      'orderStatus',
    ],
  },
  {
    name: 'TRUE_QRUN_TEST',
    description: 'True qrun testing flow',
    ownerEmail: '4pl-tms-owner@true-e-logistics.com',
    version: 1,
    schemaVersion: 2,
    tasks: [
      {
        name: 'TMS_MAPPING_BASE_MODEL_FOR_TAXI',
        taskReferenceName: 'TMS_MAPPING_BASE_MODEL_FOR_TAXI',
        inputParameters: {
          orders: '${workflow.input.order}',
          mainWorkflowInstantId: '${workflow.input.mainWorkflowInstantId}',
          orderId: '${workflow.input.orderId}',
          statuses: '${workflow.input.statuses}',
          'uber-trace-id': '${workflow.input.uber-trace-id}',
        },
        type: 'SIMPLE',
        optional: false,
      },
      {
        name: 'TMS_CREATE_TASKS',
        taskReferenceName: 'TMS_CREATE_TASKS',
        type: 'SIMPLE',
        inputParameters: {
          mainWorkflowInstantId: '${workflow.input.mainWorkflowInstantId}',
          orders: '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.orders}',
          orderId: '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.orderId}',
          statuses: '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.statuses}',
          'uber-trace-id': '${TMS_MAPPING_BASE_MODEL_FOR_TAXI.output.uber-trace-id}',
        },
        optional: false,
      },
      {
        name: 'DISPATCH_OPTIMIZE',
        taskReferenceName: 'DISPATCH_OPTIMIZE',
        type: 'SIMPLE',
        inputParameters: {
          orders: '${TMS_CREATE_TASKS.output.orders}',
          tasks: '${TMS_CREATE_TASKS.output.tasks}',
          statuses: '${TMS_CREATE_TASKS.output.statuses}',
          'uber-trace-id': '${TMS_CREATE_TASKS.output.uber-trace-id}',
        },
        optional: false,
      },
    ],
  },
]
export default workflowDefs
